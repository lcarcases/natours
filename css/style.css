/*
  0 - 600px: Phone
  600 - 900px: Tablet portrait
  900 - 1200px: Tablet landscape
  [1200 - 1800] is where our normal styles apply
  1800px + : Big desktop

  ORDER: Base + typography > general layout + grid > page layout > components

 $breakpoint arguement choices:
 - phone
 - tab-port
 - tab-land
 - big-desktop

@content is replaced with the style content set between brackets
 when invoke the respond-phone mixin

 Note: rem unit on media queries doesn't behave the same as in
       other part of the code, rem in media queries doesn't 
       depend  on html font-size. Because of that will use
       em unit that depend on font-size user configure on
       navigator and by default is 16px

       1em = 16px
*/
/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /*this make that this property be heritable for all element in
  the page*/
  box-sizing: inherit; }

html {
  /* 
       Define what  1rem is. This is because rem unit is based on root(html) 
       font size element. Then, in this case, 1 rem is equal to 10px. This is useful
       for response design.
       We put this attribute in % (this make html font size depend on browser font) in case of user change navigator font-size,
       default navigator font size is 16px, that in percentage is
       100%, if i want 10px like in this case, 10px/16px is 0.625 that
       is 62.5%. Then 0.625*16px = 10px, if user increase font-size to 22
       our html font size in pixel would be 0.625*22px = 13.73px
    */
  font-size: 62.5%; }
  @media only screen and (max-width: 75em) {
    html {
      font-size: 56.25%; } }
  @media only screen and (max-width: 37.5em) {
    html {
      font-size: 50%; } }
  @media only screen and (max-width: 56.25em) {
    html {
      font-size: 50%; } }

body {
  /*Delete the jumping at the end of animation button*/
  box-sizing: border-box;
  padding: 3rem; }
  @media only screen and (max-width: 75em) {
    body {
      padding: 0; } }

/*Style text selection*/
::selection {
  background-color: #7ed56f;
  color: #fff; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translate(-1rem); }
  100% {
    opacity: 100;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translate(1rem); }
  100% {
    opacity: 100;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /*Remove litte jump at the end of animation*/
  backface-visibility: hidden;
  /*Set space between text and button "Discover our Tours"*/
  margin-bottom: 4rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* Set animation */
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* Reduce space and size between letters */ }
    @media only screen and (max-width: 37.5em) {
      .heading-primary--main {
        letter-spacing: 1rem;
        font-family: 5rem; } }
  .heading-primary--sub {
    display: block;
    font-size: 1.6rem;
    font-weight: 900;
    letter-spacing: 1.89rem;
    margin-left: 1rem;
    /* Set animation */
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; }

.heading-secondary {
  font-size: 3.2rem;
  text-transform: uppercase;
  font-weight: 700;
  /*Convert h2 to inline-block because the  background only
    fit the text area*/
  display: inline-block;
  /*Set the background gradient*/
  background-image: linear-gradient(to right, #55c57a, #28b485);
  /*Set that the background painting area is only the text, 
    otherwise all background will be painted*/
  -webkit-background-clip: text;
  /*If i dont do this, text will be on top of gradient, then
    i set color transparent for gradient can be seen */
  color: transparent;
  letter-spacing: .2rem;
  /*Set all transition animations take 0.2s*/
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 0.3rem 0.7rem rgba(0, 0, 0, 0.2); }
  @media only screen and (max-width: 56.25em) {
    .heading-secondary {
      font-size: 3rem; } }
  @media only screen and (max-width: 37.5em) {
    .heading-secondary {
      font-size: 2.5rem; } }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center !important; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important; }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-medium {
      margin-bottom: 3rem !important; } }

.u-margin-bottom-big {
  margin-bottom: 8rem !important; }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-big {
      margin-bottom: 5rem !important; } }

.u-margin-top-medium {
  margin-top: 4rem !important; }

.u-margin-top-big {
  margin-top: 8rem !important; }

.u-margin-top-huge {
  margin-top: 10rem !important; }

.u-margin-left-small {
  margin-left: 4rem !important; }

.u-margin-left-big {
  margin-left: 8rem !important; }

.u-margin-left-huge {
  margin-left: 10rem !important; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  /*This is to fit section-about with header section  */
  margin-top: -20vh; }
  @media only screen and (max-width: 56.25em) {
    .section-about {
      padding: 20rem 0; } }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  /*Make image cover all background space*/
  background-size: cover;
  transform: skewY(-7deg);
  /*This to remove blank gap between sections */
  margin-top: -10rem;
  /* Select all direct childs to remove the skew effect */ }
  .section-features > * {
    transform: skewY(7deg); }
  @media only screen and (max-width: 56.25em) {
    .section-features {
      padding: 10rem 0; } }

.section-tours {
  margin-top: -10rem;
  background-color: #f7f7f7;
  padding: 20rem 0 15rem 0; }
  @media only screen and (max-width: 56.25em) {
    .section-tours {
      padding: 20rem 0 10rem 0; } }

.section-stories {
  padding: 1rem 0;
  position: relative; }
  @media only screen and (max-width: 56.25em) {
    .section-stories {
      padding: 10rem 0; } }

/* Background and padding of bokking section*/
.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, #55c57a, #28b485); }
  @media only screen and (max-width: 56.25em) {
    .section-book {
      padding: 10rem 0; } }

.book {
  /* This create a linear background with diagonal line*/
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  background-size: cover;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.2); }
  @media only screen and (max-width: 75em) {
    .book {
      background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 65%, transparent 65%), url(../img/nat-10.jpg);
      background-size: cover; } }
  @media only screen and (max-width: 56.25em) {
    .book {
      background-image: linear-gradient(to right, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 100%), url(../img/nat-10.jpg);
      background-size: cover; } }
  @media only screen and (max-width: 75em) {
    .book__form {
      width: 65%; } }
  @media only screen and (max-width: 56.25em) {
    .book__form {
      width: 100%; } }

.btn {
  /*This make the button up */
  /*Put a virtual element behind the .btn element*/ }
  .btn, .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 3rem;
    /*  all mean that all properties can be animated.
       In this case all animations like :hover etc, will take
       0.2s to complete, this give animation a smooth and affect 
       properties in .btn:active */
    transition: all .2s;
    /*this is to set .btn::after virtual element relative to
       .btn*/
    position: relative;
    font-size: 1.6rem;
    border: none;
    cursor: pointer; }
  .btn:active, .btn:focus {
    outline: none;
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.301);
    /*Styles for ::after virtual element when user over .btn*/ }
    .btn:hover::after {
      /*scale size from 1 to 1.5*/
      transform: scalex(1.5) scaleY(1.4);
      /*set opacity opacity from 1 to 0, emulating a vanishing efect*/
      opacity: 0; }
  .btn::after {
    /*All pseudo-elements must have content property*/
    content: "";
    /*The same as content and it is inline-block because 
        .btn it is too*/
    display: inline-block;
    /*Set same dimentions as his father .btn element*/
    height: 100%;
    width: 100%;
    /*the same as his father*/
    border-radius: 3rem;
    /*Positioning*/
    position: absolute;
    top: 0;
    left: 0;
    /*Setting ::after virtual element behind .btn*/
    z-index: -1;
    /*Set color*/
    /*set speed of properties animation and affect .btn:hover::after selector*/
    transition: all .4s; }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--green {
    background-color: #7ed56f;
    color: #fff;
    margin-bottom: 2rem;
    margin-left: 5rem; }
    .btn--green::after {
      background-color: #7ed56f; }
  .btn--animated {
    /*animation name, animation duration, animation time and delay(.75s)*/
    animation: moveInBottom .5s ease-out .75s;
    /*without this property button is visible from begining, setting this property button it is not seen at the begining*/
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #7ed56f;
  display: inline-block;
  padding: .5rem;
  text-decoration: none;
  border-bottom: 1px solid #7ed56f;
  transition: all .2s; }

.btn-text:hover {
  background-color: #7ed56f;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

/* For the video set like background we need
   to remove any background-color property form
   section-stories, otherwise it will show down and
   not like background */
.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: .15;
  /* Hide any part of video overflow .bg-video */
  overflow: hidden; }
  .bg-video__content {
    width: 100%;
    height: 100%;
    /* Is similar to background-size and in this case, make the video fit backgound keeping aspect ratio. This one work with html elements
        and videos */
    object-fit: cover; }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  /*This is because when I set its childs to absolute position
     the perspective is lost because of card class lost its height. Then
     I set  height same as its*/
  height: 52rem; }
  .card__side {
    color: #ffffff;
    font-size: 2rem;
    height: 52rem;
    transition: all .8s ease;
    position: absolute;
    /*Set the same postion for front and back card*/
    top: 0;
    left: 0;
    width: 100%;
    /*This property is very important because hide the content
         of card once it is rotated, make we dont see the content 
         rotated, instead, it hide it*/
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    border-radius: 5px;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
    /* This for hide part of image that cover this element and i want
         to hide it to see border radius effect of this element*/
    overflow: hidden; }
    .card__side--front {
      background-color: #fff; }
    .card__side--back {
      background-color: green;
      /*Initially back card is rotated to 180 deg 
             and on hover event, rotate to 0 deg */
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #55c57a, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    /* Make all background image cover all background */
    background-size: cover;
    height: 23rem;
    /* This give opacity effect to the linear gradient of linear gradient in
            background image, otherwise gradient put over image and hide it */
    background-blend-mode: screen;
    /* -webkit- prefix is for compatibility with other browser, since
         clip-path is a pretty new css property*/
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%); }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #55c57a, #28b485), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: #fff;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    /* This make that each line of a text with multiple lines
            be treated as individual element and for example if aplly
            padding like our case, padding be applied to each line and
            not only the bgining and end part of the text*/
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem; }
    .card__details ul {
      list-style: none;
      /* This is for list not fit all with of its parent element*/
      width: 80%;
      /*Center li elements, otherwise it will apears on the left side*/
      margin: 0 auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;
        color: #777;
        /* Paint border to all li element except last one*/ }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #f7f7f7; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    /* Because elements are centered from its 0,0 coordinates, I
           have to move back the elements 50% back relative to the
           element itself */
    transform: translate(-50%, -50%);
    width: 90%;
    /*Center link button*/
    text-align: center; }
  .card__price-box {
    /*Center prices*/
    text-align: center;
    color: #fff;
    margin-bottom: 8rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }
  @media only screen and (max-width: 56.25em), only screen and (hover: none) {
    .card {
      height: auto;
      border-radius: 3px;
      background-color: #fff;
      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
      .card__side {
        height: auto;
        position: relative;
        border-radius: 5px;
        box-shadow: none; }
        .card__side--back {
          transform: rotateY(0);
          clip-path: polygon(0 15%, 100% 0, 100% 100%, 0% 100%); }
      .card:hover .card__side--front {
        transform: rotateY(0); }
      .card__details {
        padding: 1rem 3rem; }
      .card__cta {
        position: relative;
        top: 0;
        left: 0;
        transform: translate(0);
        width: 100%;
        padding: 7rem 4rem 4rem 4rem; }
      .card__price-box {
        margin-bottom: 3rem; }
      .card__price-value {
        font-size: 4rem;
        font-weight: 300; } }

.composition {
  position: relative;
  /*Scale slightly down the images all images except the one with hover event*/ }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 1.5rem; }
    @media only screen and (max-width: 56.25em) {
      .composition__photo {
        float: left;
        position: relative;
        width: 33.33333333%; } }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p1 {
          top: 0;
          transform: scale(1.2); } }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p2 {
          top: -1rem;
          transform: scale(1.3);
          z-index: 100; } }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p3 {
          top: 1rem;
          left: 0;
          transform: scale(1.1); } }
    .composition__photo:hover {
      transform: scale(1.1);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20;
      /*The same as border but can have an offset with the property
              outline-offset */
      outline: 1.5rem solid #7ed56f; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(255, 255, 255, 0.15);
  transition: transform .3s; }
  @media only screen and (max-width: 56.25em) {
    .feature-box {
      padding: 2rem; } }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #55c57a, #28b485);
    -webkit-background-clip: text;
    color: transparent; }
    @media only screen and (max-width: 56.25em) {
      .feature-box__icon {
        padding: 2rem; } }
  .feature-box:hover {
    transform: translateY(1.5rem) scale(1.03); }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg);
  /*Style the image in the story section*/ }
  @media only screen and (max-width: 56.25em) {
    .story {
      width: 100%;
      padding: 4rem;
      padding-left: 7rem; } }
  @media only screen and (max-width: 37.5em) {
    .story {
      transform: skewX(0); } }
  .story__shape {
    /*All floated elements must have dimentions */
    width: 15rem;
    height: 15rem;
    /*Float image to the left of adyacent content*/
    float: left;
    /* Put slighty away the image from text and I use transform instead of left o margin because I floated the image. Skew is for transform in the opposite site of shape container*/
    transform: translateX(-3rem) skewX(12deg);
    position: relative;
    /* This Overflow is for the below @support section*/
    overflow: hidden;
    border-radius: 50%; }
    @supports (clip-path: circle(50% at 50% 50%)) {
      .story__shape {
        /* Convert image in a circle */
        -webkit-clip-path: circle(50% at 50% 50%);
        clip-path: circle(50% at 50% 50%);
        /*For compatibility navigators like firefox and safari*/
        -webkit-shape-outside: circle(50% at 50% 50%);
        /*Make the text wrap the image in form of arc instead of rectangular way*/
        shape-outside: circle(50% at 50% 50%);
        /* Remove effect of above border-radius, because it wont be necesary in this case that support shape-outside property */
        border-radius: none; } }
    @media only screen and (max-width: 37.5em) {
      .story__shape {
        transform: translateX(-3rem) skewX(0); } }
  .story__img {
    /* Because imgage is has more width than height I set height to 100% 
         to fit all area of its container*/
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    transition: all .5s; }
  .story__text {
    /*Is for transform text in the opposite site of shape container*/
    transform: skewX(12deg); }
    @media only screen and (max-width: 37.5em) {
      .story__text {
        transform: skewX(0); } }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -20%);
    color: #fff;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all .5s;
    /* This remove the litte shake at the end of animation*/
    backface-visibility: hidden; }
  .story:hover .story__caption {
    opacity: 1;
    transform: translate(-50%, -50%); }
  .story:hover .story__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%); }

.form {
  /* Add space between fields text except, last one*/
  /* Style input fileds*/
  /*Styles for labels of input fields*/
  /* Make input labels show when user start writting on fields text. Automatically
       when placeholder hide, animation start and show de label down. This selector
       indicate the initial state of label element. + symbol indicate first sibbling*/
  /* Make radio button set one aside another one */
  /* Hide original radio button input */
  /* Style for radio button label*/
  /* Set <span> style that will act like the circle of radio button */
  /* When radio button checked, select the after element
    of the child of his(radio button) sibbling */ }
  .form__group:not(:last-child) {
    margin-bottom: 2rem; }
  @media only screen and (max-width: 56.25em) {
    .form__group {
      margin-left: 2rem !important; } }
  @media only screen and (max-width: 56.25em) {
    .form__group:last-child {
      margin-top: 2rem !important; } }
  @media only screen and (max-width: 56.25em) {
    .form .btn {
      margin-bottom: 2rem;
      margin-left: 10rem; } }
  .form .heading-secondary {
    margin-left: 7rem !important; }
    @media only screen and (max-width: 56.25em) {
      .form .heading-secondary {
        margin-left: 5rem !important; } }
    @media only screen and (max-width: 37.5em) {
      .form .heading-secondary {
        margin-left: 7rem !important; } }
  .form__input {
    font-size: 1.5rem;
    font-family: inherit;
    color: #000;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba(255, 255, 255, 0.5);
    /* Remove default border*/
    border: none;
    /* This to avoid slightly jump with on focus event, that has
        border*/
    border-bottom: 3px solid transparent;
    width: 35%;
    /* This move label down de field text*/
    display: block;
    /*Set bahavior of focus text field*/
    /* Color for placeholder in the input fields */
    transition: all .3s; }
    @media only screen and (max-width: 56.25em) {
      .form__input {
        width: 96%; } }
    .form__input:focus {
      /* Remove the default border behavior of focus event */
      outline: none;
      box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);
      border-bottom: 3px solid #7ed56f;
      /* When input is focus and get invalid value*/ }
      .form__input:focus:invalid {
        border-bottom: 3px solid #ff7730; }
    .form__input::-webkit-input-placeholder {
      color: #999; }
  .form__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: .7rem;
    display: block;
    transition: all .3s; }
  .form__input:placeholder-shown + .form__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem); }
  .form__radio-group {
    width: 18%;
    display: inline-block; }
    @media only screen and (max-width: 56.25em) {
      .form__radio-group {
        width: 100%;
        margin-bottom: 2rem; } }
  .form__radio-input {
    display: none; }
  .form__radio-label {
    font-size: 1.6rem;
    /* Set an icon hand cursor pass over the label*/
    cursor: pointer;
    position: relative;
    padding-left: 4rem; }
  .form__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid #7ed56f;
    border-radius: 50%;
    /* Block  is for recognize width and height property
        and inline for circle be showed aside the text and not down */
    display: inline-block;
    position: absolute;
    left: 0;
    top: -.4rem; }
    .form__radio-button::after {
      content: "";
      /* Recognize width and height */
      display: block;
      /* Dimentions of inner circle must be slightly slower than  
            the outter circle */
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: #7ed56f;
      /* At the beggining inner circle must be hidden  and only
            be showed once user click on the radio button */
      opacity: 0;
      transition: opacity .2s; }
  .form__radio-input:checked ~ .form__radio-label .form__radio-button::after {
    opacity: 1; }

.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.8);
  z-index: 3000;
  opacity: 0;
  visibility: hidden;
  transition: all .3s;
  /* @support ask to navigator if support a property, in this case,
      backdrop-filter and in that case apply certain style. backdrop is
      only supported on safari and in this in this case use a blur effect
      to the background of popup. This property apply to the element that
      it is behind selected element, in this case the selected element is popup and behind it has all page content */
  /* When popup became the target */
  /* When popup open*/ }
  @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
    .popup {
      -webkit-backdrop-filter: blur(10px);
      backdrop-filter: blur(10px);
      background-color: rgba(0, 0, 0, 0.3); } }
  .popup__content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 75%;
    height: 43rem;
    background-color: #fff;
    box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);
    border-radius: 3px;
    /* This for popup left and right div have the same height */
    display: table;
    overflow: hidden;
    opacity: 0;
    /* In this case, because i already have a transform property
        in the mixins absCenter and will be replaced by this one
        i need to set again the translate property */
    transform: translate(-50%, -50%) scale(0);
    /* Whith the delay of .2s i get that background black appear
        first than content */
    transition: all .5s .2s; }
  .popup__left {
    width: 33.333333%;
    /* This for popup left div have the same height as the right one */
    display: table-cell; }
    @media only screen and (max-width: 56.25em) {
      .popup__left {
        width: 100%;
        display: inline-block; } }
  .popup__right {
    width: 66.6666667%;
    /* This for popup right div have the same height as the left one */
    display: table-cell;
    vertical-align: middle;
    padding: 3rem 5rem; }
    @media only screen and (max-width: 56.25em) {
      .popup__right {
        width: 100%;
        display: inline-block; } }
    @media only screen and (max-width: 56.25em) {
      .popup__right .heading-secondary {
        margin-left: 14rem !important; } }
    @media only screen and (max-width: 37.5em) {
      .popup__right .heading-secondary {
        margin-left: -1rem !important; } }
    @media only screen and (max-width: 56.25em) {
      .popup__right .heading-tertiary {
        margin-left: 9rem !important; } }
    @media only screen and (max-width: 37.5em) {
      .popup__right .heading-tertiary {
        margin-left: 3rem !important;
        text-align: center; } }
    @media only screen and (max-width: 75em) {
      .popup__right .btn {
        margin-left: 15rem !important; } }
    @media only screen and (max-width: 56.25em) {
      .popup__right .btn {
        margin-left: 23rem !important; } }
    @media only screen and (max-width: 37.5em) {
      .popup__right .btn {
        margin-left: 7rem !important; } }
  .popup__img {
    display: block;
    /* I put this to 99% because i put 100%, the image below
       leave a small white space,and 99% width fix it*/
    width: 99%; }
    @media only screen and (max-width: 56.25em) {
      .popup__img {
        width: 50%;
        float: left;
        height: 25rem; } }
    @media only screen and (max-width: 37.5em) {
      .popup__img {
        height: 20rem; } }
  .popup__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    -moz-column-count: 2;
    -moz-column-gap: 4rem;
    -moz-column-rule: 1px solid #eee;
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid #eee;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto; }
    @media only screen and (max-width: 56.25em) {
      .popup__text {
        font-size: 1.7rem; } }
    @media only screen and (max-width: 37.5em) {
      .popup__text {
        font-size: 1.7rem;
        margin-left: 3.2rem; } }
  .popup:target {
    opacity: 1;
    visibility: visible; }
  .popup:target .popup__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); }
  .popup__close:link, .popup__close:visited {
    color: #777;
    position: absolute;
    top: 2.5rem;
    right: 3rem;
    font-size: 3rem;
    text-decoration: none;
    display: inline-block;
    transition: all .2s;
    line-height: 1; }
  .popup__close:hover {
    color: #7ed56f; }

.header {
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero-small.jpg");
  /*85% de viewport*/
  height: 85vh;
  /* Adjust image width/height to fit its parent container */
  background-size: cover;
  background-position: top;
  position: relative;
  /* @supports check if a property is supported for browser, in this case it does not matter de value of polygon, polygon(0,0) was
    aleatory*/
  /* In media queries "," works like a OR operator */
  /* Decrease the pendient of diagonal */ }
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    .header {
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      height: 95vh; } }
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em), only screen and (-webkit-min-device-pixel-ratio: 192dpi) and (min-width: 37.5em), only screen and (min-width: 125em) {
    .header {
      background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg"); } }
  @media only screen and (max-width: 37.5em) {
    .header {
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
      clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); } }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /*Change position of elment respect him self*/
    transform: translate(-50%, -50%);
    /*To center the button "Discover our Tours"*/
    text-align: center; }

.footer {
  background-color: #333;
  padding: 10rem 0;
  font-size: 1.4rem;
  color: #f7f7f7; }
  .footer__logo-box {
    text-align: center;
    margin-bottom: 8rem; }
    @media only screen and (max-width: 56.25em) {
      .footer__logo-box {
        margin-bottom: 4rem; } }
  .footer__logo {
    width: 15rem;
    height: auto; }
  .footer__navigation {
    border-top: 1px solid #eee;
    padding-top: 2rem;
    display: inline-block; }
    @media only screen and (max-width: 56.25em) {
      .footer__navigation {
        width: 100%;
        text-align: center; } }
  .footer__list {
    list-style: none; }
  .footer__item {
    display: inline-block; }
    .footer__item:not(:last-child) {
      padding-right: 1rem; }
  .footer__link:link, .footer__link:visited {
    color: #f7f7f7;
    background-color: #333;
    text-decoration: none;
    text-transform: uppercase;
    display: inline-block;
    transition: all .2s; }
  .footer__link:hover, .footer__link:active {
    color: #7ed56f;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
    transform: rotate(5deg) scale(1.3); }
  .footer__copyright {
    border-top: 1px solid #777;
    padding-top: 2rem;
    width: 80%;
    float: right; }
    @media only screen and (max-width: 56.25em) {
      .footer__copyright {
        width: 100%;
        float: none;
        text-align: center; } }
  @media only screen and (max-width: 56.25em) {
    .footer {
      padding: 8rem 0; } }

.row {
  max-width: 114rem;
  /*Center elements*/
  margin: 0 auto;
  /* Make elements it does not occupy all width of screen */
  /* Select all elements that with class tha begin with "col-" 
   this is usefull to not repeat code, is a technique of
   refactorization*/
  /*To calc function work properly, numbers around "+" and "-"
     operators must have an space, and numbers around "*" and
     "/" must not contain space*/ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
    @media only screen and (max-width: 56.25em) {
      .row:not(:last-child) {
        margin-bottom: 6rem; } }
  @media only screen and (max-width: 56.25em) {
    .row {
      max-width: 50rem;
      padding: 0 3rem; } }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
      @media only screen and (max-width: 56.25em) {
        .row [class^="col-"]:not(:last-child) {
          margin-right: 0;
          margin-bottom: 6rem; } }
    @media only screen and (max-width: 56.25em) {
      .row [class^="col-"] {
        width: 100% !important; } }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/2); }
  .row .col-1-of-3 {
    width: calc((100% - 2*6rem)/3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2*6rem)/3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3*6rem)/4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3*6rem)/4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3*6rem)/4) + 6rem); }

.navigation {
  /* When checkbox checked scale sibbling navigation background to 80 */
  /* When checkbox checked set sibbling navigation to normal value property to
    can be see it the menu  */
  /* When click on checkbox icon hide the middle line */
  /* When click on checkbox icon rotate and move position
         of top line to create the "X" close button   */
  /* When click on checkbox icon rotate and move position
      of bottom line to create the "X" close button   */ }
  .navigation__checkbox {
    display: none; }
  .navigation__button {
    background-color: #fff;
    height: 7rem;
    width: 7rem;
    position: fixed;
    top: 6rem;
    right: 6rem;
    border-radius: 50%;
    z-index: 2000;
    box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);
    text-align: center;
    cursor: pointer;
    /* Repositioning icon menu button */ }
    @media only screen and (max-width: 56.25em) {
      .navigation__button {
        top: 4.5rem;
        right: 4.5rem; } }
    @media only screen and (max-width: 37.5em) {
      .navigation__button {
        top: 3.5rem;
        right: 3.5rem; } }
  .navigation__background {
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    position: fixed;
    top: 6.5rem;
    right: 6.5rem;
    background-image: radial-gradient(#7ed56f, #28b485);
    z-index: 1000;
    transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1); }
    @media only screen and (max-width: 56.25em) {
      .navigation__background {
        top: 5rem;
        right: 5rem; } }
    @media only screen and (max-width: 37.5em) {
      .navigation__background {
        top: 4rem;
        right: 4rem; } }
  .navigation__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    right: 0;
    z-index: 1500;
    /* Set opacity to 0 to dont see the menu, and width to 0 because, otherwise
       instead we dont see it, it can be selected yet and would be recognized when
       pass over each item menu*/
    opacity: 0;
    width: 0;
    transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55); }
  .navigation__list {
    position: absolute;
    left: 50%;
    transform: translate(-50%, 50%);
    list-style: none;
    text-align: center;
    width: 100%; }
  .navigation__item {
    margin: 1rem; }
  .navigation__link:link, .navigation__link:visited {
    /* Without this display setting will dont get padding neither transform
            property to move slightly to the right on over effect*/
    display: inline-block;
    font-size: 3rem;
    font-weight: 300;
    padding: 1rem 2rem;
    color: #fff;
    text-decoration: none;
    text-transform: uppercase;
    /* Paint a gradient with a diagonal of 120 degree and start at 0% of width
            with transparent color and continue with this until 50%, then the other
            50% of width element paint it in white color */
    background-image: linear-gradient(120deg, transparent 0%, transparent 50%, #fff 50%);
    /* In this case we use this property to make the on over effect on item menu, if increase this value over 100%, the background shift to the right side*/
    background-size: 230%;
    transition: all .4s; }
    .navigation__link:link span, .navigation__link:visited span {
      margin-right: 1.5rem;
      display: inline-block; }
  .navigation__link:hover, .navigation__link:active {
    background-position: 100%;
    color: #7ed56f;
    transform: translateX(1rem); }
  .navigation__checkbox:checked ~ .navigation__background {
    transform: scale(80); }
  .navigation__checkbox:checked ~ .navigation__nav {
    opacity: 1;
    width: 100%; }
  .navigation__icon {
    position: relative;
    margin-top: 3.5rem;
    /* Position top and bottom line of icon nav in relation 
           center one */ }
    .navigation__icon, .navigation__icon::before, .navigation__icon::after {
      /*Draw three lines that make up the icon*/
      width: 3rem;
      height: 2px;
      background-color: #333;
      display: inline-block; }
    .navigation__icon::before, .navigation__icon::after {
      content: "";
      position: absolute;
      left: 0;
      transition: all .4s; }
    .navigation__icon::before {
      top: -.8rem; }
    .navigation__icon::after {
      top: .8rem; }
  .navigation__button:hover .navigation__icon::before {
    top: -1rem; }
  .navigation__button:hover .navigation__icon::after {
    top: 1rem; }
  .navigation__checkbox:checked + .navigation__button .navigation__icon {
    background-color: transparent; }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::before {
    top: 0;
    transform: rotate(135deg); }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::after {
    top: 0;
    transform: rotate(-135deg); }
